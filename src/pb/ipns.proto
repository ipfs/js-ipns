// https://github.com/ipfs/go-ipns/blob/master/pb/ipns.proto

syntax = "proto3";

message IpnsEntry {
  enum ValidityType {
		EOL = 0; // setting an EOL says "this record is valid until..."
	}

	// value to be stored in the record
  optional bytes value = 1;

	// signature of the record
	optional bytes signature = 2;

	// Type of validation being used
	optional ValidityType validityType = 3;

	// expiration datetime for the record in RFC3339 format
	optional bytes validity = 4;

	// number representing the version of the record
	optional uint64 sequence = 5;

	// ttl in nanoseconds
	optional uint64 ttl = 6;

	// in order for nodes to properly validate a record upon receipt, they need the public
	// key associated with it. For old RSA keys, its easiest if we just send this as part of
	// the record itself. For newer ed25519 keys, the public key can be embedded in the
	// peerID, making this field unnecessary.
	optional bytes pubKey = 7;

	// the v2 signature of the record
	optional bytes signatureV2 = 8;

	// extensible data
	optional bytes data = 9;
}
